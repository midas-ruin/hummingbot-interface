"use strict";var e=require("../../errors.js"),a=require("../utils.js");require("@noble/curves/p256"),require("@noble/hashes/sha256"),require("canonicalize"),require("../../constants.js"),require("../../paths.js");exports.SolanaRpcApi=class{async signMessage(e){let t=a.inferRpcPath(e),r={...a.extractWalletIdentifier(e),method:"signMessage",params:{message:Buffer.from(e.message).toString("base64"),encoding:"base64"}},i=a.extractIdempotencyKeyHeader(e),n=a.createAuthorizationSignatureHeader({method:"POST",url:this.api.baseURL+t,body:r,appId:this.appId,idempotencyKeyHeader:i,authorizationPrivateKey:this.authorizationPrivateKey}),{data:s}=await this.api.post(t,r,{headers:{...n,...i}});return{signature:Buffer.from(s.data.signature,"base64")}}async signTransaction(e){let t=a.inferRpcPath(e),r=a.extractWalletIdentifier(e),i="version"in e.transaction,n={...r,method:"signTransaction",params:{transaction:Buffer.from(e.transaction.serialize({verifySignatures:!1})).toString("base64"),encoding:"base64"}},s=a.extractIdempotencyKeyHeader(e),o=a.createAuthorizationSignatureHeader({method:"POST",url:this.api.baseURL+t,body:n,appId:this.appId,idempotencyKeyHeader:s,authorizationPrivateKey:this.authorizationPrivateKey}),{data:d}=await this.api.post(t,n,{headers:{...o,...s}}),c=Buffer.from(d.data.signed_transaction,"base64"),{Transaction:p,VersionedTransaction:h}=await import("@solana/web3.js");return{signedTransaction:i?h.deserialize(c):p.from(c)}}async signAndSendTransaction(t){let r=a.inferRpcPath(t),i={...a.extractWalletIdentifier(t),method:"signAndSendTransaction",caip2:t.caip2,params:{transaction:Buffer.from(t.transaction.serialize({verifySignatures:!1})).toString("base64"),encoding:"base64"}},n=a.extractIdempotencyKeyHeader(t),s=a.createAuthorizationSignatureHeader({method:"POST",url:this.api.baseURL+r,body:i,appId:this.appId,idempotencyKeyHeader:n,authorizationPrivateKey:this.authorizationPrivateKey}),{data:o}=await this.api.post(r,i,{headers:{...s,...n}});if(o.data)return{hash:o.data.hash,caip2:o.data.caip2};if(o.error)throw new e.PrivyApiError(o.error.code,null,o.error.message);throw Error("Unexpected API response to signAndSendTransaction")}constructor({appId:e,api:a,authorizationPrivateKey:t}){this.authorizationPrivateKey=null,this.api=a,this.appId=e,t&&(this.authorizationPrivateKey=t)}};
