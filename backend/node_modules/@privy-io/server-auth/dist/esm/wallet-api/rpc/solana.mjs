import{PrivyApiError as a}from"../../errors.mjs";import{inferRpcPath as t,extractWalletIdentifier as e,extractIdempotencyKeyHeader as i,createAuthorizationSignatureHeader as r}from"../utils.mjs";import"@noble/curves/p256";import"@noble/hashes/sha256";import"canonicalize";import"../../constants.mjs";import"../../paths.mjs";class s{async signMessage(a){let s=t(a),n={...e(a),method:"signMessage",params:{message:Buffer.from(a.message).toString("base64"),encoding:"base64"}},o=i(a),p=r({method:"POST",url:this.api.baseURL+s,body:n,appId:this.appId,idempotencyKeyHeader:o,authorizationPrivateKey:this.authorizationPrivateKey}),{data:d}=await this.api.post(s,n,{headers:{...p,...o}});return{signature:Buffer.from(d.data.signature,"base64")}}async signTransaction(a){let s=t(a),n=e(a),o="version"in a.transaction,p={...n,method:"signTransaction",params:{transaction:Buffer.from(a.transaction.serialize({verifySignatures:!1})).toString("base64"),encoding:"base64"}},d=i(a),h=r({method:"POST",url:this.api.baseURL+s,body:p,appId:this.appId,idempotencyKeyHeader:d,authorizationPrivateKey:this.authorizationPrivateKey}),{data:c}=await this.api.post(s,p,{headers:{...h,...d}}),m=Buffer.from(c.data.signed_transaction,"base64"),{Transaction:u,VersionedTransaction:g}=await import("@solana/web3.js");return{signedTransaction:o?g.deserialize(m):u.from(m)}}async signAndSendTransaction(s){let n=t(s),o={...e(s),method:"signAndSendTransaction",caip2:s.caip2,params:{transaction:Buffer.from(s.transaction.serialize({verifySignatures:!1})).toString("base64"),encoding:"base64"}},p=i(s),d=r({method:"POST",url:this.api.baseURL+n,body:o,appId:this.appId,idempotencyKeyHeader:p,authorizationPrivateKey:this.authorizationPrivateKey}),{data:h}=await this.api.post(n,o,{headers:{...d,...p}});if(h.data)return{hash:h.data.hash,caip2:h.data.caip2};if(h.error)throw new a(h.error.code,null,h.error.message);throw Error("Unexpected API response to signAndSendTransaction")}constructor({appId:a,api:t,authorizationPrivateKey:e}){this.authorizationPrivateKey=null,this.api=t,this.appId=a,e&&(this.authorizationPrivateKey=e)}}export{s as SolanaRpcApi};
